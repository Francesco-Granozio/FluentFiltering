@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

<div class="dynamic-grid-container" @ref="gridContainer">
    @ChildContent
</div>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; } = default!;
    
    private ElementReference gridContainer;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("registerDynamicGrid", gridContainer);
        }
    }

    public async ValueTask DisposeAsync()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("unregisterDynamicGrid", gridContainer);
        }
        catch
        {
            // Ignore errors during disposal
        }
    }

    public async Task RefreshGrid()
    {
        await JSRuntime.InvokeVoidAsync("refreshDynamicGrid", gridContainer);
    }

    public async Task EnsurePaginationVisible()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("ensurePaginationVisible", gridContainer);
        }
        catch
        {
            // Ignore errors if JS function doesn't exist yet
        }
    }
}
